{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"enal",
				"vk_enable_validation_layers"
			],
			[
				"glfw_ens",
				"glfw_extension_count\tabc"
			],
			[
				"glfw",
				"glfw_extensions\tabc"
			],
			[
				"glfw_e",
				"glfw_extension_count\tabc"
			],
			[
				"enable",
				"vk_enable_validation_layers"
			],
			[
				"pkV",
				"p_vk_validation_layers\tabc"
			],
			[
				"enab",
				"vk_enable_validation_layers"
			],
			[
				"layer",
				"layer_found\tabc"
			],
			[
				"validat",
				"p_vk_validation_layers"
			],
			[
				"vk",
				"vk_extensions\tabc"
			],
			[
				"exten",
				"vk_extension_count"
			],
			[
				"vk_ext",
				"vk_extension_count\tabc"
			],
			[
				"insa",
				"p_vk_instance"
			],
			[
				"glfw_ex",
				"glfw_extensions\tabc"
			],
			[
				"V",
				"VK_STRUCTURE_TYPE_APPLICATION_INFO\tabc"
			],
			[
				"Tria",
				"TriangleApp\tabc"
			],
			[
				"test",
				"testing.h\tabc"
			],
			[
				"app",
				"app_info\tabc"
			],
			[
				"p_",
				"p_vk_instance\tabc"
			],
			[
				"CP",
				"CP_HEIGHT\tabc"
			],
			[
				"main",
				"main_loop\tabc"
			],
			[
				"out",
				"outfile\tabc"
			],
			[
				"size",
				"size_t\tabc"
			],
			[
				"mem",
				"memory\tstandard header"
			],
			[
				"curl",
				"curl_easy_init\tabc"
			],
			[
				"m_siz",
				"m_size_y\tabc"
			],
			[
				"Hita",
				"Hitable_List.hpp\t(Main.cpp)"
			],
			[
				"e_on",
				"e_on_mouse_movement\t(Input.cpp)"
			],
			[
				"e_on_key",
				"e_on_key_held\t(Main.cpp)"
			],
			[
				"e_onk",
				"e_on_key_up\t(Input.cpp)"
			],
			[
				"Mater",
				"Material.hpp\t(Main.cpp)"
			],
			[
				"Vet",
				"Vector3f.hpp\t(Main.cpp)"
			],
			[
				"m_or",
				"m_rotation\tabc"
			],
			[
				"Vec",
				"Vector3f.hpp\t(Main.cpp)"
			],
			[
				"Hitable_Lis",
				"Hitable_List.hpp\t(Main.cpp)"
			],
			[
				"Hi",
				"Hitable.hpp\t(Material.hpp)"
			],
			[
				"m_tim",
				"m_timer_start\tabc"
			],
			[
				"mult",
				"multi_sample_enabled\tabc"
			],
			[
				"refra",
				"refraction_index\t(Material.hpp)"
			],
			[
				"m_deb",
				"m_debug_font_tiny\tabc"
			],
			[
				"char",
				"char_string\tabc"
			],
			[
				"upda",
				"update\tabc"
			],
			[
				"draw",
				"draw_char\t(Graphics.cpp)"
			],
			[
				"file",
				"file_location\tabc"
			],
			[
				"Grap",
				"Graphics_Text.hpp\t(Graphics_Text.cpp)"
			],
			[
				"src",
				"src_sdl\tabc"
			],
			[
				"m_size",
				"m_size_y\t(Graphics.hpp)"
			],
			[
				"m_si",
				"m_size_y\t(Graphics_Text.hpp)"
			],
			[
				"mouse",
				"mouse_movement\tabc"
			],
			[
				"mouse_",
				"mouse_movement\tabc"
			],
			[
				"SDL_SCA",
				"SDL_SCANCODE_W\tabc"
			],
			[
				"mous",
				"mouse_y\tabc"
			],
			[
				"keys",
				"keys_down\tabc"
			],
			[
				"E_On",
				"E_OnKeyHeld\t(Input.hpp)"
			],
			[
				"timer",
				"timer_start\tabc"
			],
			[
				"delta",
				"_deltaTime"
			],
			[
				"Rotat",
				"RotateX\t(Vector3f.hpp)"
			],
			[
				"update",
				"update_local_positions\t(Hitable_List.hpp)"
			],
			[
				"m_",
				"m_position\t(Main.cpp)"
			],
			[
				"Cam",
				"Camera\tabc"
			],
			[
				"m_list",
				"m_list\tabc"
			],
			[
				"Hit",
				"Hitable_List\tabc"
			],
			[
				"sca",
				"scancode\tabc"
			],
			[
				"theta",
				"thetaX\tabc"
			],
			[
				"rotat",
				"RotateY"
			],
			[
				"Camera",
				"Camera.hpp\t(Main.cpp)"
			],
			[
				"half",
				"half_height\tabc"
			],
			[
				"hal",
				"half_height\tabc"
			],
			[
				"reflec",
				"reflected\tabc"
			],
			[
				"hit",
				"m_hitpoint"
			],
			[
				"ray",
				"ray_out\tabc"
			],
			[
				"rele",
				"reflect_prob\tabc"
			],
			[
				"reflect",
				"reflect_prob\tabc"
			],
			[
				"refrac",
				"refraction_index\tabc"
			],
			[
				"normal",
				"m_normal"
			],
			[
				"scatter",
				"scattered\tabc"
			],
			[
				"scate",
				"scattered\tabc"
			],
			[
				"rand",
				"random_unit_sphere_point\t(Main.cpp)"
			],
			[
				"rando",
				"random_unit_sphere_point\tabc"
			],
			[
				"square",
				"squared_length\t(Vector3f.hpp)"
			],
			[
				"stat",
				"static_cast\tabc"
			],
			[
				"horiz",
				"m_horizontal_size"
			],
			[
				"Hitab",
				"Hitable_List\tabc"
			],
			[
				"curre",
				"current_record\tabc"
			],
			[
				"para",
				"parameter_max\tabc"
			],
			[
				"param",
				"parameter_min\tabc"
			],
			[
				"m_scree",
				"m_screen_height\t(Graphics.cpp)"
			],
			[
				"m_screen_wi",
				"m_screen_width\t(Graphics.cpp)"
			],
			[
				"m_scre",
				"m_screen_width\tabc"
			],
			[
				"is",
				"is_running\tabc"
			],
			[
				"E_Ke",
				"E_KeyUp\t(Input.cpp)"
			],
			[
				"E_",
				"E_KeyDown\t(Input.cpp)"
			],
			[
				"lSDL",
				"lSDL2_image\tabc"
			],
			[
				"v3",
				"v3f_direction\tabc"
			],
			[
				"vec",
				"vector_of_direction\tabc"
			],
			[
				"vector",
				"vector_of_origin\tabc"
			],
			[
				"dire",
				"direction_v3f\tabc"
			],
			[
				"ori",
				"origin_v3f\tabc"
			],
			[
				"Ve",
				"Vector3f\tabc"
			],
			[
				"nex",
				"next_mus_event\tabc"
			],
			[
				"SB_INST",
				"SB_INSTRUMENT_BANK\tabc"
			],
			[
				"get",
				"getch\t(sb.c)"
			],
			[
				"next",
				"next_mus_event\tabc"
			],
			[
				"tune",
				"tune_id\tabc"
			],
			[
				"current",
				"current_byte\tabc"
			],
			[
				"std",
				"stdio.h\t(mus.c)"
			],
			[
				"is_pal",
				"is_playing_mus\tabc"
			],
			[
				"mus",
				"mus_file\tabc"
			],
			[
				"fget",
				"fgeti16le\t(util.c)"
			],
			[
				"soun",
				"sound_mode\tabc"
			],
			[
				"data",
				"data_size\tabc"
			],
			[
				"load",
				"loaded_mus_header\tabc"
			],
			[
				"loaded",
				"loaded_mus_header\tabc"
			],
			[
				"midi",
				"midi_track\tabc"
			],
			[
				"curren",
				"current_byte"
			],
			[
				"SB_INSTR",
				"SB_INSTRUMENT_BANK\tabc"
			],
			[
				"sb_load",
				"sb_load_instrument\t(sb.c)"
			],
			[
				"SB_MIDI_MSG_",
				"SB_MIDI_MSG_PROGRAM_CHANGE\t(midi.h)"
			],
			[
				"SB_MID",
				"SB_MIDI_SONG_\tabc"
			],
			[
				"sb_rea",
				"sb_read_var_length\tabc"
			],
			[
				"sb_key",
				"sb_key_on\t(sb.c)"
			],
			[
				"SB_MIDI",
				"SB_MIDI_NOTE\tabc"
			],
			[
				"mid",
				"midi_note_value\tabc"
			],
			[
				"read",
				"readc_stream\tabc"
			],
			[
				"readc_",
				"readc_stream\t(util.c)"
			],
			[
				"byte",
				"byte_stream\tabc"
			],
			[
				"track",
				"track_stream\tabc"
			],
			[
				"tra",
				"track_stream\tabc"
			]
		]
	},
	"buffers":
	[
		{
			"file": "main.cpp",
			"settings":
			{
				"buffer_size": 5196,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/User/MakeRun.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Package Control: rem",
				"Package Control: Remove Package"
			],
			[
				"Package Control: insta",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Remove Package"
			],
			[
				"Package Control: remov",
				"Package Control: Remove Package"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"Package Control: remo",
				"Package Control: Remove Package"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/affonso/.config/sublime-text-3/Packages/User/MakeRun.sublime-build",
		"/home/affonso/git/vulkantest/vulkantest.sublime-project",
		"/home/affonso/opt/vulkansdk/setup-env.sh",
		"/home/affonso/.bashrc",
		"/home/affonso/.config/sublime-text-3/Packages/SublimeCodeIntel/SublimeCodeIntel.sublime-settings",
		"/home/affonso/.config/sublime-text-3/Packages/User/All Autocomplete.sublime-settings",
		"/home/affonso/.config/sublime-text-3/Packages/All Autocomplete/All Autocomplete.sublime-settings",
		"/home/affonso/.config/sublime-text-3/Packages/User/SublimeCodeIntel.sublime-settings",
		"/home/affonso/git/vulkantest/test/testing.h",
		"/home/affonso/git/vulkantest/test/testing",
		"/home/affonso/src/glfw-3.3.2/CMakeLists.txt",
		"/home/affonso/src/glfw-3.3.2/CMakeCache.txt",
		"/home/affonso/git/vulkantest/Makefile",
		"/home/affonso/.bash_paths",
		"/home/affonso/src/glfw-3.3.2/README.md",
		"/home/affonso/git/pageanalyzer/fetanal.cpp",
		"/home/affonso/git/demos/memories2/memories.asm",
		"/home/affonso/git/pageanalyzer/cookies.txt",
		"/home/affonso/git/pageanalyzer/fetanal",
		"/home/affonso/git/pageanalyzer/Makefile",
		"/home/affonso/.mozilla/firefox/profiles.ini",
		"/home/affonso/git/pageanalyzer/out",
		"/home/affonso/git/ffmakefile/Makefile",
		"/home/affonso/git/pageanalyzer/fetanal.c++",
		"/home/affonso/git/cross-compiling-testing/watcom/Makefile",
		"/home/affonso/git/cross-compiling-testing/gcc/hello.c",
		"/home/affonso/git/cross-compiling-testing/watcom/hello.exe.explanation",
		"/home/affonso/git/cross-compiling-testing/gcc/compilegcc",
		"/home/affonso/git/cross-compiling-testing/gcc/hello.s",
		"/home/affonso/git/cross-compiling-testing/gcc/com.ld",
		"/home/affonso/git/cross-compiling-testing/gcc/hello.exe",
		"/home/affonso/bin/iraf",
		"/home/affonso/bin/startiraf",
		"/home/affonso/bin/tcc",
		"/home/affonso/.config/xfce4/terminal/accels.scm",
		"/home/affonso/.config/xfce4/terminal/terminalrc",
		"/home/affonso/git/cross-compiling-testing/gcc/hello.com",
		"/home/affonso/git/cross-compiling-testing/gcc/hello16.s",
		"/home/affonso/git/cross-compiling-testing/watcom/hello.lst",
		"/home/affonso/git/cross-compiling-testing/watcom/hello.exe",
		"/home/affonso/git/cross-compiling-testing/watcom/hello.c",
		"/home/affonso/src/old-gcc/egcs-1.1.2/etc/ChangeLog",
		"/home/affonso/src/old-gcc/egcs-1.1.2/gcc/README",
		"/home/affonso/src/old-gcc/egcs-1.1.2/gcc/README.TRAD",
		"/home/affonso/src/old-gcc/egcs-1.1.2/gcc/README.gnat",
		"/home/affonso/src/old-gcc/egcs-1.1.2/gcc/ChangeLog",
		"/home/affonso/src/old-gcc/gcc-0.9/README",
		"/home/affonso/src/old-gcc/gcc-0.9/PROJECTS",
		"/home/affonso/src/old-gcc/gcc-2.95/FAQ",
		"/home/affonso/src/old-gcc/gcc-2.95/README",
		"/home/affonso/src/old-gcc/gcc-2.95/config.sub",
		"/home/affonso/src/old-gcc/egcs-1.1.2/texinfo/INTRODUCTION",
		"/home/affonso/src/old-gcc/egcs-1.1.2/texinfo/README",
		"/home/affonso/src/old-gcc/egcs-1.1.2/README",
		"/home/affonso/src/old-gcc/egcs-1.1.2/FAQ",
		"/home/affonso/src/old-gcc/egcs-1.1.2/MAINTAINERS",
		"/home/affonso/src/old-gcc/egcs-1.1.2/etc/configure.in",
		"/home/affonso/src/old-gcc/egcs-1.1.2/INSTALL/CONFIGURE",
		"/home/affonso/src/old-gcc/egcs-1.1.2/configure.in",
		"/home/affonso/src/old-gcc/egcs-1.1.2/config/ChangeLog",
		"/home/affonso/src/old-gcc/egcs-1.1.2/configure",
		"/home/affonso/src/old-gcc/egcs-1.1.2/contrib/ChangeLog",
		"/home/affonso/src/old-gcc/egcs-1.1.2/INSTALL/README",
		"/home/affonso/src/old-gcc/egcs-1.1.2/INSTALL/TEST",
		"/home/affonso/src/old-gcc/egcs-1.1.2/COPYING",
		"/home/affonso/src/old-gcc/gcc-1.42/README",
		"/home/affonso/Downloads/gcc-1.30.atari.README",
		"/home/affonso/src/old-gcc/gcc-1.42/config/i860.md",
		"/home/affonso/src/old-gcc/gcc-1.42/config/i386.md",
		"/home/affonso/src/old-gcc/gcc-1.42/md",
		"/home/affonso/src/old-gcc/gcc-1.42/INSTALL",
		"/home/affonso/git/cross-compiling-testing/watcom/watcom.c",
		"/home/affonso/git/cross-compiling-testing/hello.s",
		"/home/affonso/git/cross-compiling-testing/Makefile",
		"/home/affonso/git/cross-compiling-testing/compilegcc",
		"/home/affonso/git/cross-compiling-testing/hellowat.s",
		"/home/affonso/git/cross-compiling-testing/hello.com",
		"/home/affonso/git/cross-compiling-testing/hello.exe",
		"/home/affonso/git/cross-compiling-testing/teste.c",
		"/home/affonso/git/cross-compiling-testing/testewatcom.c",
		"/home/affonso/git/cross-compiling-testing/instructions",
		"/home/affonso/git/openwatcom-testing/Makefile",
		"/home/affonso/git/openwatcom-testing/hello.c",
		"/home/affonso/git/openwatcom-testing/main.c",
		"/home/affonso/git/raytracing/Makefile",
		"/home/affonso/git/raytracing/Main.cpp",
		"/home/affonso/git/raytracing/Camera.hpp",
		"/home/affonso/git/raytracing/Color.hpp",
		"/home/affonso/git/raytracing/Font.cpp",
		"/home/affonso/git/raytracing/Font.hpp",
		"/home/affonso/git/raytracing/Graphics.cpp",
		"/home/affonso/git/raytracing/Raytrace.hpp",
		"/home/affonso/git/raytracing/Sphere.hpp",
		"/home/affonso/git/raytracing/Texture.cpp",
		"/home/affonso/git/raytracing/Ray.hpp",
		"/home/affonso/git/raytracing/RAy.hpp",
		"/home/affonso/git/raytracing/Texture.hpp",
		"/home/affonso/git/raytracing/Material.hpp",
		"/home/affonso/git/raytracing/Graphics..cpp",
		"/home/affonso/git/raytracing/Hitable_List.hpp",
		"/home/affonso/git/raytracing/Random_Generator.hpp",
		"/home/affonso/git/raytracing/Input.hpp",
		"/home/affonso/git/raytracing/Input.cpp",
		"/home/affonso/git/raytracing/Graphics.hpp",
		"/home/affonso/git/raytracing/Hitable.hpp",
		"/home/affonso/git/raytracing/Graphics.",
		"/home/affonso/git/raytracing/Timer.hpp",
		"/home/affonso/git/raytracing/Vector3f.hpp",
		"/home/affonso/git/raytracing/Graphics_Text.hpp",
		"/home/affonso/git/ffengine/Graphics.cpp",
		"/home/affonso/git/raytracing/Graphics_Text.cpp",
		"/home/affonso/git/raytracing/Graphics_Text_new.cpp",
		"/home/affonso/git/ffengine/Graphics.hpp",
		"/home/affonso/git/raytracing/make",
		"/home/affonso/git/raytracing/out",
		"/home/affonso/git/raytracing/Test.hpp",
		"/home/affonso/git/raytracing/main.hpp",
		"/home/affonso/git/ffengine/Input.cpp",
		"/home/affonso/git/ffengine/Engine.cpp",
		"/home/affonso/git/ffsound/Makefile",
		"/home/affonso/git/ffengine/Color.hpp",
		"/home/affonso/git/raytracing/Engine_System.hpp",
		"/home/affonso/git/raytracing/Engine_System.cpp",
		"/home/affonso/git/raytracing/Engine.hpp",
		"/home/affonso/git/raytracing/Engine.cpp",
		"/home/affonso/git/kingdom/script",
		"/home/affonso/git/kingdom/designdocument",
		"/home/affonso/git/ffsound/mus.c"
	],
	"find":
	{
		"height": 37.0
	},
	"find_in_files":
	{
		"height": 247.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"window",
			"COMPILER",
			"time_mask",
			"handle",
			"pointer",
			"user_data",
			"contents",
			"ctx",
			"nmemb",
			"sz",
			"memory",
			"16",
			"16 bit",
			"16",
			"017a",
			"017a 5200 017c",
			"017a 5200 017c 0801",
			"017a 5200 017c 0801\n",
			"017a 5200 017c 0801\n1b0c",
			"std::string",
			"#",
			"t_",
			"m_",
			"m",
			"m_",
			"M_",
			"m_",
			"M_",
			"m_",
			"DeltaTime()",
			"DeltaTime",
			"();\n",
			"DeltaTime();",
			"DeltaTime()",
			"DeltaTime",
			"m",
			"DeltaTime",
			"\n\t",
			"this->",
			"font->",
			"x",
			", ",
			"this->",
			"100",
			"SDL_SCANCODE_",
			"SDL_SCANCODE_D",
			"0.1",
			"05",
			"r.direction",
			".origin()",
			"direction()",
			".direction()",
			"m_position",
			"center",
			"[16]",
			"Vector3f::operator[](int) const",
			"m_position",
			"scattered",
			"hpp",
			"v3f",
			"hpp",
			"v3f",
			"fill",
			"hpp",
			"/=",
			" /= ",
			"/=",
			"Vector3(",
			"Vector3",
			"Vector3 ",
			"Vector3",
			"*",
			"-",
			"+",
			">>",
			"malloc",
			"far",
			"huge",
			"far",
			"int",
			"&mus_file",
			"midi_track->next_event",
			"is_playing_midi",
			");\n",
			"SB_MIDI_MSG_NOTE_OFF",
			"MIDI",
			"midi",
			"MIDI",
			"&(midi_track->next_event)",
			"FILE*",
			"SB_ERR_READING_mus_file",
			"midi_file",
			"MIDI_FILE",
			"midi_file",
			"MIDI_FILE",
			"midi_file",
			"MIDI_FILE",
			"midi_file",
			"MIDI_FILE",
			"midi_file",
			"MIDI_FILE",
			"midi_file",
			"MIDI_FILE",
			"midi_file",
			"MIDI_FILE",
			"midi_file",
			"MIDI_FILE",
			"midi_file",
			"MIDI_FILE",
			"midi_file",
			"MIDI_FILE",
			"midi_file",
			"MIDI_FILE",
			"midi_file",
			"MIDI_FILE",
			"midi_file",
			"MIDI",
			"midi",
			"MIDI",
			"midi",
			"MIDI",
			"midi",
			"MIDI",
			"midi",
			"MIDI",
			"midi",
			"MIDI",
			"midi"
		],
		"highlight": false,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "main.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5196,
						"regions":
						{
						},
						"selection":
						[
							[
								735,
								735
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1081.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 37.0
	},
	"input":
	{
		"height": 50.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 210.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/Makefile/Make.sublime-build",
	"project": "vulkantest.sublime-project",
	"replace":
	{
		"height": 70.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"Audio_System"
			]
		],
		"width": 592.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 159.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
